"use strict";(self.webpackChunkgeolocationNotificationMedia=self.webpackChunkgeolocationNotificationMedia||[]).push([[179],{12:function(){const t={memory:[],handler:null,listen(t){this.handler=t},add(t,e){if(this.memory.unshift({content:t,date:this.getDate(),coords:e}),!this.handler)throw new Error("handler is not bind to dataBase");this.handler()},getDate(){const t=new Intl.DateTimeFormat("ru",{timeZone:"Europe/Moscow",hour:"numeric",minute:"numeric",day:"numeric",month:"numeric",year:"numeric"}).format(new Date);return this.cleanDate(t)},cleanDate(t){const e=t.split(" ");return this.date=[e[0].slice(0,-1),e[1]].join(" "),this.date}};class e{constructor(){this.options={enableHighAccuracy:!1,timeout:5e3,maximumAge:0},this.coords=null,this.errorInfo=null,this.succesHandler=this.succesHandler.bind(this),this.errorHandler=this.errorHandler.bind(this)}getLocation(){return new Promise((t=>{navigator.geolocation?navigator.geolocation.getCurrentPosition((e=>t(this.succesHandler(e))),(e=>t(this.errorHandler(e)))):(this.errorInfo={success:!1,title:"Ваш браузер не поддерживает геолокацию",description:"К сожалению, нам не удалось определить ваше местоположение, смените браузер, либо введите координаты вручную."},t(this.errorInfo))}))}succesHandler(t){this.errorInfo=null;const{latitude:e,longitude:i}=t.coords;return this.coords={success:!0,latitude:+e.toFixed(5),longitude:+i.toFixed(5)},this.coords}errorHandler(t){switch(this.coords=null,t.code){case t.PERMISSION_DENIED:this.errorInfo={success:!1,title:"Настройки текущего браузера запрещают определение вашего местоположения",description:'К сожалению, нам не удалось определить ваше местоположение, потому что у страницы не было на это разрешения, нажмите кнопку "отмена", затем измените настройки конфидициальности в текущем браузере и повторите попытку, либо введите координаты вручную'};break;case t.POSITION_UNAVAILABLE:this.errorInfo={success:!1,title:"Информация о вашем текущем местоположении недоступна",description:'К сожалению, нам не удалось определить ваше местоположение, потому что один или несколько внутренних источников местоположения вернули внутреннюю ошибку, нажмите кнопку "отмена" и повторите попытку, либо введите координаты вручную'};break;case t.TIMEOUT:this.errorInfo={success:!1,title:"Истекло время ожидания",description:'К сожалению, нам не удалось определить ваше местоположение, поскольку информация о геолокации не была получена в отведенное время, нажмите кнопку "отмена" и повторите попытку, либо введите координаты вручную'};break;default:this.errorInfo={success:!1,title:"Произошла неизвестная ошибка",description:'К сожалению, нам не удалось определить ваше местоположение, нажмите кнопку "отмена" и повторите попытку, либо введите координаты вручную'}}return this.errorInfo}}class i{constructor(t){if(!(t instanceof HTMLElement))throw new Error("element is not HTMLElement");this.timer=t,this.min=0,this.sec=0,this.stopTime=!0,this.timeCycle=this.timeCycle.bind(this)}startTimer(){this.stopTime&&(this.stopTime=!this.stopTime,this.timeCycle())}stopTimer(){this.stopTime||(this.stopTime=!this.stopTime)}timeCycle(){this.stopTime||(this.sec=+this.sec+1,60===this.sec&&(this.min=+this.min+1,this.sec=0),(this.sec<10||0===this.sec)&&(this.sec="0"+ +this.sec),(this.min<10||0===this.min)&&(this.min="0"+ +this.min),this.timer.textContent=`${this.min}:${this.sec}`,setTimeout(this.timeCycle,1e3))}resetTimer(){this.timer.innerHTML="00:00",this.stopTime=!0,this.min=0,this.sec=0}}class s{constructor(t){this.popup=t,this.geoLocation=new e,this.btnMicro=document.querySelector(".form__micro"),this.btnVideo=document.querySelector(".form__camera"),this.mediaControl=document.querySelector(".form__media"),this.recordControl=document.querySelector(".form__record"),this.btnOk=document.querySelector(".form__record-btnOK"),this.btnCancel=document.querySelector(".form__record-btnCancel"),this.timer=document.querySelector(".form__timer"),this.video=document.querySelector(".form__preview-video"),this.recorder=null,this.stream=null,this.cancel=!1,this.timer=new i(document.querySelector(".form__timer")),this.contentType=null,this.onBtnOkClick=this.onBtnOkClick.bind(this),this.onBtnMediaClick=this.onBtnMediaClick.bind(this),this.onBtnCancelClick=this.onBtnCancelClick.bind(this),this.stopRecord=this.stopRecord.bind(this),this.dataavailable=this.dataavailable.bind(this),this.startRecord=this.startRecord.bind(this),this.btnMicro.addEventListener("click",this.onBtnMediaClick),this.btnVideo.addEventListener("click",this.onBtnMediaClick),this.btnOk.addEventListener("click",this.onBtnOkClick),this.btnCancel.addEventListener("click",this.onBtnCancelClick)}onBtnCancelClick(){this.cancel=!this.cancel,this.recorder.stop(),this.stream.getTracks().forEach((t=>t.stop())),this.timer.resetTimer(),this.recordControl.classList.add("d_none"),this.mediaControl.classList.remove("d_none"),"video"===this.contentType&&this.video.classList.add("d_none"),console.log("cancel")}onBtnOkClick(){this.recorder.stop(),this.stream.getTracks().forEach((t=>t.stop())),"video"===this.contentType&&this.video.classList.add("d_none")}async onBtnMediaClick(t){if(navigator.mediaDevices)try{if(this.cancel&&(this.cancel=!this.cancel),"form__micro"===t.target.className&&(this.contentType="audio",this.stream=await navigator.mediaDevices.getUserMedia(s.options.streamAudio)),"form__camera"===t.target.className&&(this.contentType="video",this.stream=await navigator.mediaDevices.getUserMedia(s.options.streamVideo),this.video.classList.remove("d_none"),this.video.srcObject=this.stream,this.video.play()),!window.MediaRecorder)return void this.showError(s.options.mediarecorder);this.recorder=new MediaRecorder(this.stream),this.chunks=[],this.recorder.addEventListener("start",this.startRecord),this.recorder.addEventListener("dataavailable",this.dataavailable),this.recorder.addEventListener("stop",this.stopRecord),this.recorder.start(),this.timer.startTimer()}catch(t){this.showError(s.options.access,t)}else this.showError(s.options.mediadevices)}showError(t,e=""){this.popup.changePopup(),this.popup.show(t),e&&console.error(e)}startRecord(){this.recordControl.classList.remove("d_none"),this.mediaControl.classList.add("d_none"),console.log("recording started")}dataavailable(t){this.cancel||(this.chunks.push(t.data),console.log("data available"))}stopRecord(){if(!this.cancel){const e=new Blob(this.chunks),i=URL.createObjectURL(e);let s;"audio"===this.contentType&&(s=`<audio src="${i}" controls></audio>`),"video"===this.contentType&&(s=`<video src="${i}" controls></video>`);this.geoLocation.getLocation().then((e=>{e.success?t.add(s,e):this.popup.show(e)})),this.timer.resetTimer(),this.recordControl.classList.add("d_none"),this.mediaControl.classList.remove("d_none"),console.log("recorder stopped")}}static get options(){return{access:{title:"Настройки вашего браузера запрещают доступ к микрофону или видеокамере",description:"К сожалению нам не удалось выполнить запись, потому что у страницы не было на это разрешения, измените настройки конфидициальности текущего браузера и повторите попытку"},mediarecorder:{title:"Ваш браузер не поддерживает API MediaRecorder",description:"К сожалению нам не удалось выполнить запись, потому что ваш браузер не поддерживает функцию записи аудио-видео, смените браузер и повторите попытку"},mediadevices:{title:"Ваш браузер не поддерживает API MediaDevices",description:"К сожалению нам не удалось выполнить запись, потому что ваш браузер не поддерживает функцию записи аудио-видео, смените браузер и повторите попытку"},streamAudio:{audio:!0,video:!1},streamVideo:{audio:!0,video:!0}}}}class o{constructor(t=document.body){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.mainInput=this.container.querySelector(".form__input"),this.sample=null,this.cancelBtn=null,this.okBtn=null,this.popupInput=null,this.popupTitle=null,this.popupDescription=null,this.onOkClick=this.onOkClick.bind(this),this.resetChange=this.resetChange.bind(this)}init(){this.creat(),this.cancelBtn=document.querySelector('[data-name="cancel"]'),this.okBtn=document.querySelector('[data-name="save"]'),this.popupForm=document.querySelector(".popup__form"),this.popupInput=document.querySelector(".popup__input"),this.popupTitle=document.querySelector(".popup__title"),this.popupDescription=document.querySelector(".popup__description"),this.popupLabel=document.querySelector(".popup__label"),this.popupForm.addEventListener("submit",(t=>t.preventDefault())),this.cancelBtn.addEventListener("click",(()=>this.hide())),this.okBtn.addEventListener("click",this.onOkClick)}onOkClick(){if(this.popupInput.value)if(o.checkPopupInput(this.popupInput.value)){this.hideRedPlaceholder();const e=this.mainInput.value,i=o.formatingPopupInput(this.popupInput.value);t.add(e,i),this.mainInput.value="",this.popupInput.value="",this.hide()}else this.popupInput.value="",this.showRedPlaceholder("Неверный формат");else this.showRedPlaceholder("Заполните пожалуйста это поле")}showRedPlaceholder(t){this.popupInput.classList.add("red"),this.popupInput.placeholder=t}hideRedPlaceholder(){this.popupInput.className="popup__input",this.popupInput.placeholder="Введите координаты"}static formatingPopupInput(t){const e=t.replace(/^\[/,"").replace(/\]$/,"").split(",");return{latitude:+e[0],longitude:+e[1].replace(/^ /,"")}}static checkPopupInput(t){return/^\[?-?\d{1,2}(\.\d{1,5})?,\s?-?\d{1,2}(\.\d{1,5})?\]?$/.test(t)}static get markUP(){return'<div class="popup__body">\n     <div class="popup__content">\n      <h3 class="popup__title add"></h3>\n      <div class="popup__description"></div>\n      <form name="adding" class="popup__form" novalidate="">\n        <label class="popup__label">\n          <div class="popup__name">Широта и долгота через запятую:</div>\n          <input name="title" id="title" type="text" class="popup__input" required="" placeholder="Введите координаты">\n        </label>\n        <div class="popup__buttons">\n          <button name="save" data-name="save" class="button">Ok</button>\n          <button name="cancel" data-name="cancel" class="button">Отмена</button>\n        </div>\n      </form>\n    </div>\n  </div>'}creat(){this.sample=document.createElement("div"),this.sample.className="popup",this.sample.innerHTML=o.markUP,this.container.appendChild(this.sample)}show(t){t&&(this.popupTitle.textContent=t.title,this.popupDescription.textContent=t.description,this.sample.classList.add("open"))}changePopup(){this.okBtn.classList.add("d_none"),this.cancelBtn.classList.add("green"),this.cancelBtn.textContent="OK",this.popupLabel.classList.add("d_none")}resetChange(){this.okBtn.className="button",this.cancelBtn.className="button",this.cancelBtn.textContent="Отмена",this.popupLabel.className="popup__label"}hide(){this.sample.classList.remove("open"),setTimeout((()=>{this.popupInput.value="",this.popupTitle.textContent="",this.popupDescription.textContent="",this.resetChange()}),500)}}class n{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}static markUp(t,e,i){return`<div class="timeline__item">\n    <div class="timeline-item__data">${t}</div>\n    <div class="timeline-item__content">\n      ${e}\n    </div>\n    <div class="timeline-item__geo">\n      <span class="geo__data">[${i.latitude}, ${i.longitude}]</span>\n      <span class="geo__icon">\n        <svg class="geo-icon__svg" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="eye" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" data-fa-i2svg=""><path fill="currentColor" d="M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z"></path></svg>\n      </span>\n    </div>\n  </div>`}draw(t){this.container.innerHTML="",t.forEach((t=>{this.container.insertAdjacentHTML("beforeend",n.markUp(t.date,t.content,t.coords))}))}}class r{constructor(t){this.form=document.querySelector(".form"),this.popup=t,this.input=this.form.querySelector(".form__input"),this.geoLocation=new e,this.onSubmit=this.onSubmit.bind(this),this.form.addEventListener("submit",this.onSubmit)}onSubmit(e){if(e.preventDefault(),this.input.value){this.hideRedPlaceholder();const e=this.input.value;this.geoLocation.getLocation().then((i=>{i.success?(t.add(e,i),this.input.value=""):this.popup.show(i)}))}else this.showRedPlaceholder("Введите пожалуйста сообщение")}showRedPlaceholder(t){this.input.classList.add("red"),this.input.placeholder=t}hideRedPlaceholder(){this.input.className="form__input",this.input.placeholder="Введите сообщение"}}new class{constructor(t){if(!(t instanceof HTMLElement))throw new Error("rootElement is not HTMLElement");this.rootElement=t,this.geoHandler=new e,this.popup=new o,this.textHandler=new r(this.popup),this.postRenderer=new n(this.rootElement.querySelector(".timeline")),this.mediaHandler=new s(this.popup)}init(){this.popup.init(),t.listen(this.postRenderer.draw.bind(this.postRenderer,t.memory))}}(document.getElementById("root")).init()}},function(t){var e;e=12,t(t.s=e)}]);